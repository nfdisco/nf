#!/usr/bin/guile
!#

(use-modules
 (ice-9 getopt-long)
 (ice-9 format)
 (srfi srfi-11)
 (nf nf))

(setlocale LC_ALL "")

(define version "1.0")

(define version-msg
  (format #f "~a version ~a" (progname) version))

(define option-spec
  '((num-ext (value #t) (single-char #\e))
    (dry (value #f))
    (version (value #f))
    (help (value #f))))

(define help-msg
  (format #f
   "\
usage: ~a: [OPTIONS] [--] [FILE [FILE...]]
Rename files to Unix-friendly file names.

Options:
 -e  --num-ext=N   number of file name extensions (default: 0)
     --dry         show what would be done; do not actually rename
     --help        show this help and exit
     --version     show version and exit
" (progname)))

(define (main args)
  "Process command-line arguments."
  (let ((options (getopt-long args option-spec)))
    (when (option-ref options 'help #f)
      (format #t "~a~%" help-msg)
      (exit 0))
    (when (option-ref options 'version #f)
      (format #t "~a~%" version-msg)
      (exit 0))
    (let ((num-ext (string->number (option-ref options 'num-ext "-1")))
          (src (option-ref options '() #f)))
      (when (null? src)
        (print-error "error: non-option argument required")
        (exit 1))
      (when (not (integer? num-ext))
        (print-error "error: option requires integer argument: ~a" num-ext)
        (exit 1))
      (exit (rename src num-ext (not (option-ref options 'dry #f)))))))

(parameterize ((progname (basename (car (command-line)))))
              (main (command-line)))

;;
;; LOCAL Variables:
;; mode: scheme
;; geiser-scheme-implementation: guile
;; End:
